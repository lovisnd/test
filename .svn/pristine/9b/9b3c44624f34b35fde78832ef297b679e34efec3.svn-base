<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tiankui.reactService.mapper.DictMapper" >
  <resultMap id="BaseResultMap" type="com.tiankui.reactService.entity.DictGroup" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="groupCode" property="groupCode" jdbcType="VARCHAR" />
    <result column="groupName" property="groupName" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="BIGINT" />
  </resultMap>
    <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
  	id, groupCode, groupName, createTime
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tiankui.reactService.entity.DictExample" >
    select
    <include refid="Base_Column_List" />
    from t_s_dict_group
  </select> 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_s_dict_group
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getListByTableName" parameterType="java.lang.String" resultMap="BaseResultMap">
	  select column_name,column_default, column_type,column_comment  from information_schema.columns
		where table_name = #{tableName}
  </select>
  
  <select id="getTabs" resultMap="BaseResultMap">
  	select table_name,table_comment from information_schema.tables where table_schema='pgnm_ms' and table_type='base table' order by create_time asc;
  </select>
  
  <update id="updateDept" parameterType="java.util.Map">
  	update 
  	t_s_dict_group set groupName = #{groupName},groupCode = #{groupCode}
  	 where id = #{id}
  </update>
  
    <insert id="insertDictGroup" parameterType="java.util.Map">
  	insert into t_s_dict_group (id,groupCode,groupName,createTime)
  	values (#{id},#{groupCode},#{groupName},#{createTime})
  </insert>
  
  <delete id="delDept" parameterType="java.lang.String">
  	delete from t_s_dict_group where id = #{id}
  </delete>
</mapper>