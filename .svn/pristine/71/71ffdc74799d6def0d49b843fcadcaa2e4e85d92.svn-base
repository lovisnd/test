package com.tiankui.reactService.service.impl;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.tiankui.reactService.entity.Dept;
import com.tiankui.reactService.entity.DeptExample;
import com.tiankui.reactService.entity.TMenu;
import com.tiankui.reactService.entity.TMenuExample;
import com.tiankui.reactService.mapper.DeptMapper;
import com.tiankui.reactService.service.IDeptService;
import com.tiankui.reactService.util.ObjectUtil;
import com.tiankui.reactService.util.UUIDUtil;

@Service
public class DeptService implements IDeptService {

	@Autowired
	private DeptMapper deptMapper;
	
	@Override
	public List<Dept> getList(Map<String, Object> map) {
		List<Dept> list = deptMapper.getListByExample(map);
		return list;
	}
	@Override
	public List<Dept> getAll() {
		DeptExample deptExample = new DeptExample();
		deptExample.setOrderByClause("sort,createtime asc");
		List<Dept> list = deptMapper.selectByExample(deptExample);
		for (Dept dept : list) {
			if (dept.getParentId()==null) {
				dept.setParentId("");
			}
		}
		return list;
	}

	@Override
	public Dept getDept(String id) {
		Dept dept = deptMapper.selectByPrimaryKey(id);
		return dept;
	}
	
	@Override
	public int editDept(String id, Map<String, Object> map) {
		map.put("id", id);
		long time = new Date().getTime();
		map.put("updateTime", time);
		int result = deptMapper.updateDept(map);
		return result;
	}
	@Override
	public int addDept(Map<String, Object> map) {
		String uuid = UUIDUtil.getUUID();
		map.put("id", uuid);
		map.put("deleted", 0);
		String parentId = ObjectUtil.isNull(map.get("parenId")) ? "" : map.get("parenId").toString();
		int sort = deptMapper.getSortByPrenId(parentId);
		map.put("sort", ObjectUtil.isNull(sort) ? 0 : sort+1);
		map.put("createTime", new Date().getTime());
		int result = deptMapper.insertDept(map);
		return result;
	}
	@Override
	public int delDept(String id) {
		int result = deptMapper.delDept(id);
		return result;
	}
}
